{
    "openapi": "3.0.0",
    "info": {
        "title": "Swaggelize API",
        "description": "API automatic generator using Swagger API and Swaggelize",
        "contact": {
            "name": "Hasininjato Rojovao"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api"
        },
        {
            "url": "http://localhost:3000/api"
        }
    ],
    "components": {
        "parameters": {
            "UserId": {
                "name": "id",
                "in": "path",
                "schema": {
                    "type": "string"
                },
                "required": true,
                "description": "User id"
            },
            "TransactionName": {
                "name": "name",
                "in": "path",
                "schema": {
                    "type": "string"
                },
                "required": true,
                "description": "Transaction name"
            },
            "ProfileId": {
                "name": "id",
                "in": "path",
                "schema": {
                    "type": "string"
                },
                "required": true,
                "description": "Profile id"
            },
            "TagId": {
                "name": "id",
                "in": "path",
                "schema": {
                    "type": "string"
                },
                "required": true,
                "description": "Tag id"
            },
            "PostId": {
                "name": "id",
                "in": "path",
                "schema": {
                    "type": "string"
                },
                "required": true,
                "description": "Post id"
            },
            "userFullnameFilter": {
                "name": "fullname",
                "in": "query",
                "schema": {
                    "type": "string"
                },
                "required": false,
                "description": "User fullname"
            },
            "userEmailFilter": {
                "name": "email",
                "in": "query",
                "schema": {
                    "type": "string"
                },
                "required": false,
                "description": "Email user"
            }
        },
        "schemas": {
            "InstrumentList": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": ""
                        },
                        "type": {
                            "type": "string",
                            "description": "type of the instrument"
                        },
                        "purchaseDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": ""
                        }
                    }
                }
            },
            "InstrumentItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": ""
                    },
                    "type": {
                        "type": "string",
                        "description": "type of the instrument"
                    },
                    "purchaseDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": ""
                    }
                }
            },
            "InstrumentPut": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "type of the instrument"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "InstrumentPost": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "type of the instrument"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "InstrumentLogin": {
                "type": "object",
                "properties": {}
            },
            "InstrumentUsersList": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "userId": {
                            "type": "integer",
                            "format": "int32",
                            "description": "User ID"
                        },
                        "instrumentId": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Instrument ID"
                        }
                    }
                }
            },
            "InstrumentUsersItem": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "User ID"
                    },
                    "instrumentId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Instrument ID"
                    }
                }
            },
            "InstrumentUsersPut": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "User ID"
                    },
                    "instrumentId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Instrument ID"
                    }
                }
            },
            "InstrumentUsersPost": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "User ID"
                    },
                    "instrumentId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Instrument ID"
                    }
                }
            },
            "InstrumentUsersLogin": {
                "type": "object",
                "properties": {}
            },
            "PostList": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "title": {
                            "type": "string",
                            "description": "Post title"
                        },
                        "content": {
                            "type": "string",
                            "description": "Post content"
                        }
                    }
                }
            },
            "PostItem": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "Post title"
                    },
                    "content": {
                        "type": "string",
                        "description": "Post content"
                    }
                }
            },
            "PostPut": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "Post title"
                    },
                    "content": {
                        "type": "string",
                        "description": "Post content"
                    }
                },
                "required": [
                    "title"
                ]
            },
            "PostPost": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "Post title"
                    },
                    "content": {
                        "type": "string",
                        "description": "Post content"
                    }
                },
                "required": [
                    "title"
                ]
            },
            "PostLogin": {
                "type": "object",
                "properties": {}
            },
            "PostTagsList": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "postId": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Tag name"
                        },
                        "tagId": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Tag name"
                        }
                    }
                }
            },
            "PostTagsItem": {
                "type": "object",
                "properties": {
                    "postId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Tag name"
                    },
                    "tagId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Tag name"
                    }
                }
            },
            "PostTagsPut": {
                "type": "object",
                "properties": {
                    "postId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Tag name"
                    },
                    "tagId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Tag name"
                    }
                }
            },
            "PostTagsPost": {
                "type": "object",
                "properties": {
                    "postId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Tag name"
                    },
                    "tagId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Tag name"
                    }
                }
            },
            "PostTagsLogin": {
                "type": "object",
                "properties": {}
            },
            "ProfileList": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Profile ID"
                        },
                        "bio": {
                            "type": "string",
                            "description": "Profile bio"
                        }
                    }
                }
            },
            "ProfileItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Profile ID"
                    },
                    "bio": {
                        "type": "string",
                        "description": "Profile bio"
                    }
                }
            },
            "ProfilePut": {
                "type": "object",
                "properties": {
                    "bio": {
                        "type": "string",
                        "description": "Profile bio"
                    }
                }
            },
            "ProfilePost": {
                "type": "object",
                "properties": {
                    "bio": {
                        "type": "string",
                        "description": "Profile bio"
                    }
                }
            },
            "ProfileLogin": {
                "type": "object",
                "properties": {}
            },
            "TagList": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Tag name"
                        }
                    }
                }
            },
            "TagItem": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Tag name"
                    }
                }
            },
            "TagPut": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Tag name"
                    }
                }
            },
            "TagPost": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Tag name"
                    }
                }
            },
            "TagLogin": {
                "type": "object",
                "properties": {}
            },
            "TransactionList": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Id of the transaction"
                        },
                        "amount": {
                            "type": "string",
                            "description": "Amount of the transaction"
                        },
                        "description": {
                            "type": "string",
                            "description": "Description of the transaction"
                        },
                        "date": {
                            "type": "string",
                            "format": "date-time",
                            "description": ""
                        },
                        "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date when the record was created"
                        },
                        "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date when the record was last updated"
                        }
                    }
                }
            },
            "TransactionItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Id of the transaction"
                    },
                    "amount": {
                        "type": "string",
                        "description": "Amount of the transaction"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the transaction"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "description": ""
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date when the record was created"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date when the record was last updated"
                    }
                }
            },
            "TransactionPut": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "string",
                        "description": "Amount of the transaction"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the transaction"
                    }
                },
                "required": [
                    "amount",
                    "description"
                ]
            },
            "TransactionPost": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "string",
                        "description": "Amount of the transaction"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the transaction"
                    }
                },
                "required": [
                    "amount",
                    "description"
                ]
            },
            "TransactionLogin": {
                "type": "object",
                "properties": {}
            },
            "userList": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Id of the user"
                        },
                        "fullname": {
                            "type": "string",
                            "description": "User fullname"
                        },
                        "email": {
                            "type": "string",
                            "description": "Email user"
                        },
                        "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date when the record was created"
                        },
                        "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date when the record was last updated"
                        }
                    }
                }
            },
            "userItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Id of the user"
                    },
                    "fullname": {
                        "type": "string",
                        "description": "User fullname"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email user"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date when the record was created"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date when the record was last updated"
                    }
                }
            },
            "userPut": {
                "type": "object",
                "properties": {
                    "fullname": {
                        "type": "string",
                        "description": "User fullname"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email user"
                    },
                    "password": {
                        "type": "string",
                        "description": ""
                    }
                },
                "required": [
                    "fullname",
                    "email",
                    "password"
                ]
            },
            "userPost": {
                "type": "object",
                "properties": {
                    "fullname": {
                        "type": "string",
                        "description": "User fullname"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email user"
                    },
                    "password": {
                        "type": "string",
                        "description": ""
                    }
                },
                "required": [
                    "fullname",
                    "email",
                    "password"
                ]
            },
            "userLogin": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Id of the user"
                    },
                    "fullname": {
                        "type": "string",
                        "description": "User fullname"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email user"
                    }
                }
            },
            "Response400Schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the error",
                        "example": "ValidationError",
                        "enum": [
                            "ValidationError",
                            "UniqueConstraintError"
                        ]
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "field": {
                                    "type": "string",
                                    "description": "Name of the field"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Message on validation"
                                }
                            }
                        }
                    }
                }
            },
            "Response409Schema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the error",
                        "example": "ValidationError",
                        "enum": [
                            "ValidationError",
                            "UniqueConstraintError"
                        ]
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "field": {
                                    "type": "string",
                                    "description": "Name of the field"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Message on validation"
                                }
                            }
                        }
                    }
                }
            },
            "PostTagRelationList": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "title": {
                            "type": "string",
                            "description": "Post title"
                        },
                        "content": {
                            "type": "string",
                            "description": "Post content"
                        },
                        "Tags": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Tag name"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "PostTagRelationItem": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "Post title"
                    },
                    "content": {
                        "type": "string",
                        "description": "Post content"
                    },
                    "Tags": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Tag name"
                                }
                            }
                        }
                    }
                }
            },
            "TagPostRelationList": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Tag name"
                        },
                        "Posts": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "description": "Post title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "description": "Post content"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "TagPostRelationItem": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Tag name"
                    },
                    "Posts": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "Post title"
                                },
                                "content": {
                                    "type": "string",
                                    "description": "Post content"
                                }
                            }
                        }
                    }
                }
            },
            "userProfileRelationPost": {
                "type": "object",
                "properties": {
                    "fullname": {
                        "type": "string",
                        "description": "User fullname"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email user"
                    },
                    "password": {
                        "type": "string",
                        "description": ""
                    },
                    "profile": {
                        "type": "object",
                        "properties": {
                            "bio": {
                                "type": "string",
                                "description": "Profile bio"
                            }
                        }
                    }
                },
                "required": [
                    "fullname",
                    "email",
                    "password"
                ]
            },
            "userProfileRelationList": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Id of the user"
                        },
                        "fullname": {
                            "type": "string",
                            "description": "User fullname"
                        },
                        "email": {
                            "type": "string",
                            "description": "Email user"
                        },
                        "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date when the record was created"
                        },
                        "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date when the record was last updated"
                        },
                        "profile": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Profile ID"
                                },
                                "bio": {
                                    "type": "string",
                                    "description": "Profile bio"
                                }
                            }
                        }
                    }
                }
            },
            "userProfileRelationItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Id of the user"
                    },
                    "fullname": {
                        "type": "string",
                        "description": "User fullname"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email user"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date when the record was created"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date when the record was last updated"
                    },
                    "profile": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Profile ID"
                            },
                            "bio": {
                                "type": "string",
                                "description": "Profile bio"
                            }
                        }
                    }
                }
            },
            "userRelationItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Id of the user"
                    },
                    "fullname": {
                        "type": "string",
                        "description": "User fullname"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email user"
                    }
                }
            },
            "CustomLogin": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Id of the user"
                    },
                    "fullname": {
                        "type": "string",
                        "description": "User fullname"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email user"
                    },
                    "access_token": {
                        "type": "string",
                        "description": "Access token"
                    },
                    "refresh_token": {
                        "type": "string",
                        "description": "Refresh token",
                        "example": "fkasjd;ur  rqfj asudf"
                    },
                    "array_tokens": {
                        "type": "array",
                        "description": "",
                        "items": {
                            "type": "object",
                            "properties": {
                                "access_token": {
                                    "type": "string",
                                    "description": "Access token"
                                },
                                "refresh_token": {
                                    "type": "string",
                                    "description": "Refresh token"
                                }
                            }
                        }
                    },
                    "object_tokens": {
                        "type": "object",
                        "description": "",
                        "properties": {
                            "access_token": {
                                "type": "string",
                                "description": "Access token"
                            },
                            "refresh_token": {
                                "type": "string",
                                "description": "Refresh token",
                                "example": "ejgh8ta582.afkrioakljflkjsdfk"
                            }
                        }
                    }
                }
            },
            "CustomValidateToken": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Validity of the token",
                        "example": "The token is still valid"
                    }
                }
            },
            "userTransactionRelationItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Id of the user"
                    },
                    "fullname": {
                        "type": "string",
                        "description": "User fullname"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email user"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date when the record was created"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date when the record was last updated"
                    },
                    "Transactions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Id of the transaction"
                                },
                                "amount": {
                                    "type": "string",
                                    "description": "Amount of the transaction"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description of the transaction"
                                },
                                "date": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": ""
                                },
                                "createdAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Date when the record was created"
                                },
                                "updatedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Date when the record was last updated"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "paths": {
        "/posts": {
            "get": {
                "summary": "List of all posts",
                "description": "List of all posts",
                "tags": [
                    "Post"
                ],
                "responses": {
                    "200": {
                        "description": "List of all posts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostTagRelationList"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "summary": "Create a post",
                "description": "Create a post",
                "tags": [
                    "Post"
                ],
                "responses": {
                    "201": {
                        "description": "Post created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (VALIDATION_ERROR)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400Schema"
                                },
                                "example": {
                                    "name": "ValidationError",
                                    "errors": [
                                        {
                                            "field": "title",
                                            "message": "Title is required"
                                        },
                                        {
                                            "field": "title",
                                            "message": "Title cannot be empty"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Unique constraint errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response409Schema"
                                },
                                "example": {
                                    "name": "UniqueConstraintError",
                                    "errors": []
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostPost"
                            }
                        }
                    }
                }
            }
        },
        "/posts/{id}": {
            "get": {
                "summary": "Get post by id",
                "description": "Get post by id",
                "tags": [
                    "Post"
                ],
                "responses": {
                    "200": {
                        "description": "Get post by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostTagRelationItem"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PostId"
                    }
                ]
            },
            "put": {
                "summary": "Update a post by id",
                "description": "Update a post by id",
                "tags": [
                    "Post"
                ],
                "responses": {
                    "400": {
                        "description": "Bad request (VALIDATION_ERROR)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400Schema"
                                },
                                "example": {
                                    "name": "ValidationError",
                                    "errors": [
                                        {
                                            "field": "title",
                                            "message": "Title is required"
                                        },
                                        {
                                            "field": "title",
                                            "message": "Title cannot be empty"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "409": {
                        "description": "Unique constraint errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response409Schema"
                                },
                                "example": {
                                    "name": "UniqueConstraintError",
                                    "errors": []
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PostId"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostPut"
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a post by id",
                "description": "Delete a post by id",
                "tags": [
                    "Post"
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PostId"
                    }
                ]
            }
        },
        "/profiles": {
            "get": {
                "summary": "List of all profiles",
                "description": "List of all profiles",
                "tags": [
                    "Profile"
                ],
                "responses": {
                    "200": {
                        "description": "List of all profiles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfileList"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "summary": "Create a profile",
                "description": "Create a profile",
                "tags": [
                    "Profile"
                ],
                "responses": {
                    "201": {
                        "description": "Profile created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfileItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (VALIDATION_ERROR)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400Schema"
                                },
                                "example": {
                                    "name": "ValidationError",
                                    "errors": []
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Unique constraint errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response409Schema"
                                },
                                "example": {
                                    "name": "UniqueConstraintError",
                                    "errors": []
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProfilePost"
                            }
                        }
                    }
                }
            }
        },
        "/profiles/{id}": {
            "get": {
                "summary": "Get profile by id",
                "description": "Get profile by id",
                "tags": [
                    "Profile"
                ],
                "responses": {
                    "200": {
                        "description": "Get profile by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfileItem"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Profile not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ProfileId"
                    }
                ]
            },
            "put": {
                "summary": "Update a profile by id",
                "description": "Update a profile by id",
                "tags": [
                    "Profile"
                ],
                "responses": {
                    "200": {
                        "description": "Update a profile by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfileItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (VALIDATION_ERROR)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400Schema"
                                },
                                "example": {
                                    "name": "ValidationError",
                                    "errors": []
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Profile not found"
                    },
                    "409": {
                        "description": "Unique constraint errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response409Schema"
                                },
                                "example": {
                                    "name": "UniqueConstraintError",
                                    "errors": []
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ProfileId"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProfilePut"
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a profile by id",
                "description": "Delete a profile by id",
                "tags": [
                    "Profile"
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Profile not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ProfileId"
                    }
                ]
            }
        },
        "/tags": {
            "get": {
                "summary": "List of all tags",
                "description": "List of all tags",
                "tags": [
                    "Tag"
                ],
                "responses": {
                    "200": {
                        "description": "List of all tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TagPostRelationList"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "summary": "Create a tag",
                "description": "Create a tag",
                "tags": [
                    "Tag"
                ],
                "responses": {
                    "201": {
                        "description": "Tag created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TagItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (VALIDATION_ERROR)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400Schema"
                                },
                                "example": {
                                    "name": "ValidationError",
                                    "errors": []
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Unique constraint errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response409Schema"
                                },
                                "example": {
                                    "name": "UniqueConstraintError",
                                    "errors": []
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagPost"
                            }
                        }
                    }
                }
            }
        },
        "/tags/{id}": {
            "get": {
                "summary": "Get tag by id",
                "description": "Get tag by id",
                "tags": [
                    "Tag"
                ],
                "responses": {
                    "200": {
                        "description": "Get tag by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TagPostRelationItem"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Tag not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/TagId"
                    }
                ]
            },
            "put": {
                "summary": "Update a tag by id",
                "description": "Update a tag by id",
                "tags": [
                    "Tag"
                ],
                "responses": {
                    "400": {
                        "description": "Bad request (VALIDATION_ERROR)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400Schema"
                                },
                                "example": {
                                    "name": "ValidationError",
                                    "errors": []
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Tag not found"
                    },
                    "409": {
                        "description": "Unique constraint errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response409Schema"
                                },
                                "example": {
                                    "name": "UniqueConstraintError",
                                    "errors": []
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/TagId"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagPut"
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a tag by id",
                "description": "Delete a tag by id",
                "tags": [
                    "Tag"
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Tag not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/TagId"
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "summary": "List of all users",
                "description": "List of all users",
                "tags": [
                    "user"
                ],
                "responses": {
                    "200": {
                        "description": "List of all users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/userProfileRelationList"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/userFullnameFilter"
                    },
                    {
                        "$ref": "#/components/parameters/userEmailFilter"
                    }
                ]
            },
            "post": {
                "summary": "Create a user",
                "description": "Create a user",
                "tags": [
                    "user"
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/userProfileRelationItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (VALIDATION_ERROR)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400Schema"
                                },
                                "example": {
                                    "name": "ValidationError",
                                    "errors": []
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Unique constraint errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response409Schema"
                                },
                                "example": {
                                    "name": "UniqueConstraintError",
                                    "errors": []
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/userProfileRelationPost"
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "summary": "Login an user",
                "description": "Login an user",
                "tags": [
                    "Authentication"
                ],
                "responses": {
                    "400": {
                        "description": "Bad request (VALIDATION_ERROR)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400Schema"
                                },
                                "example": {
                                    "name": "ValidationError",
                                    "errors": []
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Unique constraint errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response409Schema"
                                },
                                "example": {
                                    "name": "UniqueConstraintError",
                                    "errors": []
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/userItem"
                            }
                        }
                    }
                }
            }
        },
        "/validate/token": {
            "get": {
                "summary": "Validate token sent in parameter",
                "description": "Validate token sent in parameter",
                "tags": [
                    "Token"
                ],
                "responses": {
                    "200": {
                        "description": "Validate token sent in parameter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomValidateToken"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/userItem"
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "summary": "Get user by id",
                "description": "Get user by id",
                "tags": [
                    "user"
                ],
                "responses": {
                    "200": {
                        "description": "Get user by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/userProfileRelationItem"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UserId"
                    }
                ]
            },
            "put": {
                "summary": "Update an user by id",
                "description": "Update an user by id",
                "tags": [
                    "user"
                ],
                "responses": {
                    "200": {
                        "description": "Update an user by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (VALIDATION_ERROR)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400Schema"
                                },
                                "example": {
                                    "name": "ValidationError",
                                    "errors": []
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "409": {
                        "description": "Unique constraint errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response409Schema"
                                },
                                "example": {
                                    "name": "UniqueConstraintError",
                                    "errors": []
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UserId"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/userPut"
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete an user by id",
                "description": "Delete an user by id",
                "tags": [
                    "user"
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UserId"
                    }
                ]
            }
        },
        "/users/{id}/transactions": {
            "post": {
                "summary": "Creation of a transaction of a user",
                "description": "Create a transaction of the user sent in param",
                "tags": [
                    "Transaction"
                ],
                "responses": {
                    "201": {
                        "description": "Creation of a transaction of a user successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (VALIDATION_ERROR)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response400Schema"
                                },
                                "example": {
                                    "name": "ValidationError",
                                    "errors": [
                                        {
                                            "field": "amount",
                                            "message": "Amount is required"
                                        },
                                        {
                                            "field": "amount",
                                            "message": "Amount must be a valid decimal number"
                                        },
                                        {
                                            "field": "amount",
                                            "message": "Amount cannot be empty"
                                        },
                                        {
                                            "field": "amount",
                                            "message": "Amount must be greater than 0"
                                        },
                                        {
                                            "field": "description",
                                            "message": "Description is required"
                                        },
                                        {
                                            "field": "description",
                                            "message": "Description cannot be empty"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Unique constraint errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response409Schema"
                                },
                                "example": {
                                    "name": "UniqueConstraintError",
                                    "errors": []
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UserId"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionPost"
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "List of all transactions of an user by id",
                "description": "List of all transactions of an user by id",
                "tags": [
                    "Transaction"
                ],
                "responses": {
                    "200": {
                        "description": "List of all transactions of an user by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/userTransactionRelationItem"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UserId"
                    }
                ]
            }
        },
        "/users/{id}/transactions/{name}": {
            "get": {
                "summary": "List of all transactions with name of an user by id",
                "description": "List of all transactions with name of an user by id",
                "tags": [
                    "Transaction"
                ],
                "responses": {
                    "200": {
                        "description": "List of all transactions with name of an user by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/userTransactionRelationItem"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User, Transaction not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/UserId"
                    },
                    {
                        "$ref": "#/components/parameters/TransactionName"
                    }
                ]
            }
        }
    }
}